# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import re

from PyQt5.QtGui import QPixmap

import blackjack

class Ui_LoginDialog(object):
    def __init__(self, user, stackedWidget, username, avatar):
        self.user = user
        self.stWid = stackedWidget
        self.username = username
        self.avatar = avatar

    def setupUi(self, LoginDialog):
        LoginDialog.setObjectName("LoginDialog")
        LoginDialog.resize(481, 210)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(LoginDialog.sizePolicy().hasHeightForWidth())
        LoginDialog.setSizePolicy(sizePolicy)
        LoginDialog.setMinimumSize(QtCore.QSize(481, 210))
        LoginDialog.setMaximumSize(QtCore.QSize(481, 210))
        self.stackedWidget = QtWidgets.QStackedWidget(LoginDialog)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 0, 481, 211))
        self.stackedWidget.setAutoFillBackground(False)
        self.stackedWidget.setStyleSheet("QWidget{\n"
                                         "    background: #6B5596;\n"
                                         "}\n"
                                         "QLineEdit {\n"
                                         "    border: 2px solid gray;\n"
                                         "    border-radius: 10px;\n"
                                         "    padding: 0 8px;\n"
                                         "    background: #CFC1D0;\n"
                                         "}\n"
                                         "QLabel {\n"
                                         "    color: #FEFE58;\n"
                                         "}\n"
                                         "QPushButton{\n"
                                         "    border-style: solid;\n"
                                         "    border-color: #050a0e;\n"
                                         "    border-width: 1px;\n"
                                         "    border-radius: 5px;\n"
                                         "    color: #FEFE58;\n"
                                         "    padding: 2px;\n"
                                         "    background-color: #100E19;\n"
                                         "}\n"
                                         "QPushButton::default{\n"
                                         "    border-style: solid;\n"
                                         "    border-color: #050a0e;\n"
                                         "    border-width: 1px;\n"
                                         "    border-radius: 5px;\n"
                                         "    color: #FEFE58;\n"
                                         "    padding: 2px;\n"
                                         "    background-color: #151a1e;\n"
                                         "}\n"
                                         "QPushButton:hover{\n"
                                         "    border-style: solid;\n"
                                         "    border-top-color: qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:1, stop:0 #C0DB50, stop:0.4 #C0DB50, stop:0.5 #100E19, stop:1 #100E19);\n"
                                         "    border-bottom-color: qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:1, stop:0 #100E19, stop:0.5 #100E19, stop:0.6 #C0DB50, stop:1 #C0DB50);\n"
                                         "    border-left-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #C0DB50, stop:0.3 #C0DB50, stop:0.7 #100E19, stop:1 #100E19);\n"
                                         "    border-right-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 #C0DB50, stop:0.3 #C0DB50, stop:0.7 #100E19, stop:1 #100E19);\n"
                                         "    border-width: 2px;\n"
                                         "    border-radius: 1px;\n"
                                         "    color: #FEFE58;\n"
                                         "    padding: 2px;\n"
                                         "}\n"
                                         "QPushButton:pressed{\n"
                                         "    border-style: solid;\n"
                                         "    border-top-color: qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:1, stop:0 #d33af1, stop:0.4 #d33af1, stop:0.5 #100E19, stop:1 #100E19);\n"
                                         "    border-bottom-color: qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:1, stop:0 #100E19, stop:0.5 #100E19, stop:0.6 #d33af1, stop:1 #d33af1);\n"
                                         "    border-left-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #d33af1, stop:0.3 #d33af1, stop:0.7 #100E19, stop:1 #100E19);\n"
                                         "    border-right-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 #d33af1, stop:0.3 #d33af1, stop:0.7 #100E19, stop:1 #100E19);\n"
                                         "    border-width: 2px;\n"
                                         "    border-radius: 1px;\n"
                                         "    color: #FEFE58;\n"
                                         "    padding: 2px;\n"
                                         "}")
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.passwordInput = QtWidgets.QLineEdit(self.page)
        self.passwordInput.setGeometry(QtCore.QRect(160, 80, 251, 31))
        self.passwordInput.setObjectName("passwordInput")
        self.passwordInput.setEchoMode(QtWidgets.QLineEdit.Password)
        self.login_1 = QtWidgets.QLabel(self.page)
        self.login_1.setGeometry(QtCore.QRect(80, 30, 81, 31))
        self.login_1.setObjectName("login_1")
        self.loginButton = QtWidgets.QPushButton(self.page)
        self.loginButton.setGeometry(QtCore.QRect(210, 120, 121, 31))
        self.loginButton.setObjectName("loginButton")
        self.password = QtWidgets.QLabel(self.page)
        self.password.setGeometry(QtCore.QRect(30, 80, 131, 31))
        self.password.setObjectName("password")
        self.loginInput = QtWidgets.QLineEdit(self.page)
        self.loginInput.setGeometry(QtCore.QRect(160, 29, 251, 31))
        self.loginInput.setObjectName("loginInput")
        self.newUserButton = QtWidgets.QPushButton(self.page)
        self.newUserButton.setGeometry(QtCore.QRect(350, 170, 121, 31))
        self.newUserButton.setObjectName("newUserButton")
        self.errorLabel1 = QtWidgets.QLabel(self.page)
        self.errorLabel1.setGeometry(QtCore.QRect(10, 170, 171, 21))
        self.errorLabel1.setText("")
        self.errorLabel1.setObjectName("errorLabel1")
        self.errorLabel1.setStyleSheet("color: red")
        self.stackedWidget.addWidget(self.page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.password2Input = QtWidgets.QLineEdit(self.page_2)
        self.password2Input.setGeometry(QtCore.QRect(160, 120, 251, 31))
        self.password2Input.setObjectName("password2Input")
        self.password2Input.setEchoMode(QtWidgets.QLineEdit.Password)
        self.createButton = QtWidgets.QPushButton(self.page_2)
        self.createButton.setGeometry(QtCore.QRect(210, 160, 121, 31))
        self.createButton.setObjectName("createButton")
        self.loginInput_2 = QtWidgets.QLineEdit(self.page_2)
        self.loginInput_2.setGeometry(QtCore.QRect(160, 19, 251, 31))
        self.loginInput_2.setObjectName("loginInput_2")
        self.password1Input = QtWidgets.QLineEdit(self.page_2)
        self.password1Input.setGeometry(QtCore.QRect(160, 70, 251, 31))
        self.password1Input.setObjectName("password1Input")
        self.password1Input.setEchoMode(QtWidgets.QLineEdit.Password)
        self.login_2 = QtWidgets.QLabel(self.page_2)
        self.login_2.setGeometry(QtCore.QRect(80, 20, 81, 31))
        self.login_2.setObjectName("login_2")
        self.password2 = QtWidgets.QLabel(self.page_2)
        self.password2.setGeometry(QtCore.QRect(30, 120, 131, 31))
        self.password2.setObjectName("password2")
        self.password1 = QtWidgets.QLabel(self.page_2)
        self.password1.setGeometry(QtCore.QRect(30, 70, 131, 31))
        self.password1.setObjectName("password1")
        self.backButton = QtWidgets.QPushButton(self.page_2)
        self.backButton.setGeometry(QtCore.QRect(380, 170, 91, 31))
        self.backButton.setObjectName("backButton")
        self.errorLabel2 = QtWidgets.QLabel(self.page_2)
        self.errorLabel2.setGeometry(QtCore.QRect(10, 170, 171, 21))
        self.errorLabel2.setText("")
        self.errorLabel2.setObjectName("errorLabel2")
        self.stackedWidget.addWidget(self.page_2)

        self.retranslateUi(LoginDialog)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(LoginDialog)

        self.newUserButton.clicked.connect(self.goToNewUser)
        self.backButton.clicked.connect(self.goToLogin)
        self.loginButton.clicked.connect(self.loginValidation)
        self.createButton.clicked.connect(self.newUserValidation)

    def retranslateUi(self, LoginDialog):
        _translate = QtCore.QCoreApplication.translate
        LoginDialog.setWindowTitle(_translate("LoginDialog", "Dialog"))
        self.login_1.setText(_translate("LoginDialog",
                                        "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600;\">LOGIN</span></p></body></html>"))
        self.loginButton.setText(_translate("LoginDialog", "LOGIN"))
        self.password.setText(_translate("LoginDialog",
                                         "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600;\">PASSWORD</span></p></body></html>"))
        self.newUserButton.setText(_translate("LoginDialog", "NEW USER"))
        self.createButton.setText(_translate("LoginDialog", "CREATE"))
        self.login_2.setText(_translate("LoginDialog",
                                        "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600;\">LOGIN</span></p></body></html>"))
        self.password2.setText(_translate("LoginDialog",
                                          "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600;\">PASSWORD</span></p></body></html>"))
        self.password1.setText(_translate("LoginDialog",
                                          "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600;\">PASSWORD</span></p></body></html>"))
        self.backButton.setText(_translate("LoginDialog", "BACK"))

    def goToNewUser(self):
        self.stackedWidget.setCurrentWidget(self.page_2)
        self.loginInput_2.setText("")
        self.password1Input.setText("")
        self.password2Input.setText("")
        self.errorLabel2.setText("")
        self.loginInput.setStyleSheet("border-color: grey")
        self.passwordInput.setStyleSheet("border-color: grey")

    def goToLogin(self):
        self.stackedWidget.setCurrentWidget(self.page)
        self.loginInput.setText("")
        self.passwordInput.setText("")
        self.errorLabel1.setText("")
        self.loginInput_2.setStyleSheet("border-color: grey")
        self.password1Input.setStyleSheet("border-color: grey")
        self.password2Input.setStyleSheet("border-color: grey")

    def loginValidation(self):
        if re.match("^[a-z0-9A-Z]{5,16}$", self.loginInput.text()) is None or re.match("^[a-z0-9]{5,16}$",
                                                                                       self.passwordInput.text()) is None:
            self.errorLabel1.setText("Login/password incorrect")
            print("Login/password incorrect")
        else:
            self.errorLabel1.setText("")
            print("good to go")
            self.loginUser(self.loginInput.text(), self.passwordInput.text())

    def loginUser(self, login, password):
        db = blackjack.DataBase()
        result = db.validateLogin(login, password)
        print(result)
        if (result):
            print("UDANE LOGOWANIE !")
            self.stWid.setCurrentIndex(1)       #ustawienie graficzne
            font = QtGui.QFont()
            font.setPointSize(16)
            font.setBold(True)
            font.setWeight(75)
            user = db.getPlayer2(login)
            self.username.setText(user[0])
            self.username.setFont(font)
            pixmap = QPixmap('images/avatars/'+user[1]).scaled(61, 61)

            self.avatar.setPixmap(pixmap)
            self.user.username = user[0]          #ustawienie danych zalogowanego usera
            self.user.avatar = user[1]
            self.user.isAdmin = user[2]



            #LoginDialog.close()            #TODO zamykanie, nie dziala :(
            #LoginDialog.done(2)
            #LoginDialog.accept()
        else:
            self.errorLabel1.setText("UNSUCCESFULL !")


    def newUserValidation(self):
        self.errorLabel2.setStyleSheet("color: red")
        if re.match("^[a-z0-9A-Z]{5,16}$", self.loginInput_2.text()) is None:
            self.loginInput_2.setStyleSheet("border-color: red")
            loginCorrect = False
        else:
            self.loginInput_2.setStyleSheet("border-color: green")
            loginCorrect = True
        if re.match("^[a-z0-9A-Z]{5,16}$", self.password1Input.text()) is None:
            self.password1Input.setStyleSheet("border-color: red")
            pass1Correct = False
        else:
            self.password1Input.setStyleSheet("border-color: green")
            pass1Correct = True
        if re.match("^[a-z0-9A-Z]{5,16}$", self.password2Input.text()) is None:
            self.password2Input.setStyleSheet("border-color: red")
            pass2Correct = False
        else:
            self.password2Input.setStyleSheet("border-color: green")
            pass2Correct = True
        if self.password1Input.text() != self.password2Input.text():
            self.errorLabel2.setText("Passwords do not match")
            passMatch = False
        else:
            self.errorLabel2.setText("")
            passMatch = True
        if loginCorrect and pass1Correct and pass2Correct and passMatch:
            db = blackjack.DataBase()
            mainResult = False
            result = db.checkIfPlayerExists(self.loginInput_2.text())
            if (result):
                self.errorLabel2.setStyleSheet("color: red")
                self.errorLabel2.setText("Username already taken")
                pass
            else:
                db.addPlayer(self.loginInput_2.text(), self.password1Input.text(), "default.png")
                blackjack.testPlayers()
                mainResult = True
                print("Pomyślnie dodano uzytkownika")
                self.errorLabel2.setStyleSheet("color: #b1f900")
                self.errorLabel2.setText("Succesfully created")
            return mainResult


if __name__ == "__main__":
    import sys
    print('system')
    # db = blackjack.DataBase()
    blackjack.testPlayers()
    app = QtWidgets.QApplication(sys.argv)
    LoginDialog = QtWidgets.QDialog()
    LoginDialog.setWindowFlag(QtCore.Qt.WindowType.Popup)
    ui = Ui_LoginDialog()
    ui.setupUi(LoginDialog)
    LoginDialog.show()
    sys.exit(app.exec_())
